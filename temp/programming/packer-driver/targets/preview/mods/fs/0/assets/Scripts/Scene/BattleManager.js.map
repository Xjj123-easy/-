{"version":3,"sources":["file:///E:/cocosproject/Dome/cocos-start-demo/assets/Scripts/Scene/BattleManager.ts"],"names":["_decorator","Component","director","AudioClip","level","DataManager","TlieMapManager","EventManager","ENTINY_STATE_ENUM","ENTITY_TYPE_ENUM","EVENTMANAGER","SCENE_ENUM","creatUINode","PlayerManager","WoodenSkeletonManager","DoorManager","IronskeletonManager","BurstManager","SpikesManager","SmokeManager","FaderManager","ShakeManager","MusicManager","ccclass","property","TILE_HEIGHT","TILE_WIDTH","BattleManager","start","initScence","generaterStage","initLevel","onLoad","preloadScene","strat","Instance","levelindex","on","NEXT_LEVEL","nextlevel","PLAYERMOVE_END","CheeckDoor","SMOKE_SHOW","generaterSmoke","RECORD_STEP","record","REVOKE_STEP","revoke","RESTART","reStart","EXIT","exit","onDestroy","off","clear","stop","node","destroy","destory","loadScene","levels","hasinited","fadeIn","mask","clearlevel","levelss","mapInfo","mapColumnCount","length","mapRowCount","Promise","all","generateTileMap","generaterDoor","generaterEnemy","generaterSmokeLayer","generaterSpikes","generaterBurst","generaterPlayer","fadeOut","play","clip","stage","destroyAllChildren","reset","setParent","setSiblingIndex","addComponent","tlieMap","TlieMapManagers","init","adaptor","player","playerManagers","emit","PLAYER_BORN","enemes","promises","i","enemies","enemy","Manager","type","WOODENSKELETON","MA","push","door","doorManager","burst","bursts","burstManager","spikes","spik","spikesManager","smokeLayer","direction","x","y","item","smoke","find","s","state","DEATH","setPosition","IDLE","smokemanager","SMOKE","DiX","Diy","getComponent","playerX","playerY","doorX","doorY","doorState","AIRDEATH","map","count","pop","targetX","targetY","spike"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAASA,MAAAA,U,OAAAA,U;AAAYC,MAAAA,S,OAAAA,S;AAAiBC,MAAAA,Q,OAAAA,Q;AAAUC,MAAAA,S,OAAAA,S;;AAEzCC,MAAAA,K;;AACAC,MAAAA,W;;AACEC,MAAAA,c,iBAAAA,c;;AACFC,MAAAA,Y;;AACkBC,MAAAA,iB,iBAAAA,iB;AAAmBC,MAAAA,gB,iBAAAA,gB;AAAkBC,MAAAA,Y,iBAAAA,Y;AAAcC,MAAAA,U,iBAAAA,U;;AACnEC,MAAAA,W,iBAAAA,W;;AACAC,MAAAA,a,iBAAAA,a;;AACAC,MAAAA,qB,iBAAAA,qB;;AACAC,MAAAA,W,kBAAAA,W;;AACAC,MAAAA,mB,kBAAAA,mB;;AACAC,MAAAA,Y,kBAAAA,Y;;AACAC,MAAAA,a,kBAAAA,a;;AACAC,MAAAA,Y,kBAAAA,Y;;AACFC,MAAAA,Y;;AACEC,MAAAA,Y,kBAAAA,Y;;AACFC,MAAAA,Y;;;;;;;OACD;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBxB,U;AAE9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACMyB,MAAAA,W,GAAc,E;AACdC,MAAAA,U,GAAa,E;;+BAENC,a,WADZJ,OAAO,CAAC,eAAD,C,UAELC,QAAQ,CAACrB,SAAD,C,oCAFX,MACawB,aADb,SACmC1B,SADnC,CAC6C;AAAA;AAAA;;AAAA;;AAAA;;AAAA,yCAI7B,IAJ6B;;AAAA,8CAKxB,IALwB;;AAAA,6CAMd,KANc;AAAA;;AAMR;AAEnC2B,QAAAA,KAAK,GAAG;AACN,eAAKC,UAAL;AACD;;AACDA,QAAAA,UAAU,GAAG;AACX,eAAKC,cAAL;AACA,eAAKC,SAAL;AACD;;AAEDC,QAAAA,MAAM,GAAG;AACP9B,UAAAA,QAAQ,CAAC+B,YAAT,CAAsB;AAAA;AAAA,wCAAWC,KAAjC;AACA;AAAA;AAAA,0CAAYC,QAAZ,CAAqBC,UAArB,GAAkC,CAAlC;AACA;AAAA;AAAA,4CAAaD,QAAb,CAAsBE,EAAtB,CAAyB;AAAA;AAAA,4CAAaC,UAAtC,EAAkD,KAAKC,SAAvD,EAAkE,IAAlE;AACA;AAAA;AAAA,4CAAaJ,QAAb,CAAsBE,EAAtB,CAAyB;AAAA;AAAA,4CAAaG,cAAtC,EAAsD,KAAKC,UAA3D,EAAuE,IAAvE;AACA;AAAA;AAAA,4CAAaN,QAAb,CAAsBE,EAAtB,CAAyB;AAAA;AAAA,4CAAaK,UAAtC,EAAkD,KAAKC,cAAvD,EAAuE,IAAvE;AACA;AAAA;AAAA,4CAAaR,QAAb,CAAsBE,EAAtB,CAAyB;AAAA;AAAA,4CAAaO,WAAtC,EAAmD,KAAKC,MAAxD,EAAgE,IAAhE;AACA;AAAA;AAAA,4CAAaV,QAAb,CAAsBE,EAAtB,CAAyB;AAAA;AAAA,4CAAaS,WAAtC,EAAmD,KAAKC,MAAxD,EAAgE,IAAhE;AACA;AAAA;AAAA,4CAAaZ,QAAb,CAAsBE,EAAtB,CAAyB;AAAA;AAAA,4CAAaW,OAAtC,EAA+C,KAAKC,OAApD,EAA6D,IAA7D;AACA;AAAA;AAAA,4CAAad,QAAb,CAAsBE,EAAtB,CAAyB;AAAA;AAAA,4CAAaa,IAAtC,EAA4C,KAAKC,IAAjD,EAAuD,IAAvD;AACD;;AAEDC,QAAAA,SAAS,GAAG;AACV;AAAA;AAAA,4CAAajB,QAAb,CAAsBkB,GAAtB,CAA0B;AAAA;AAAA,4CAAaf,UAAvC,EAAmD,KAAKC,SAAxD;AACA;AAAA;AAAA,4CAAaJ,QAAb,CAAsBkB,GAAtB,CAA0B;AAAA;AAAA,4CAAab,cAAvC,EAAuD,KAAKC,UAA5D;AACA;AAAA;AAAA,4CAAaN,QAAb,CAAsBkB,GAAtB,CAA0B;AAAA;AAAA,4CAAaX,UAAvC,EAAmD,KAAKC,cAAxD;AACA;AAAA;AAAA,4CAAaR,QAAb,CAAsBkB,GAAtB,CAA0B;AAAA;AAAA,4CAAaT,WAAvC,EAAoD,KAAKC,MAAzD;AACA;AAAA;AAAA,4CAAaV,QAAb,CAAsBkB,GAAtB,CAA0B;AAAA;AAAA,4CAAaP,WAAvC,EAAoD,KAAKC,MAAzD;AACA;AAAA;AAAA,4CAAaZ,QAAb,CAAsBkB,GAAtB,CAA0B;AAAA;AAAA,4CAAaL,OAAvC,EAAgD,KAAKC,OAArD;AACA;AAAA;AAAA,4CAAad,QAAb,CAAsBkB,GAAtB,CAA0B;AAAA;AAAA,4CAAaH,IAAvC,EAA6C,KAAKC,IAAlD;AACA;AAAA;AAAA,4CAAahB,QAAb,CAAsBmB,KAAtB;AACD;;AACDL,QAAAA,OAAO,GAAG;AACR;AAAA;AAAA,4CAAad,QAAb,CAAsBoB,IAAtB;AACA,eAAKxB,SAAL;AACD;;AAEDoB,QAAAA,IAAI,GAAG;AACL,eAAKK,IAAL,CAAUC,OAAV;AACA;AAAA;AAAA,4CAAatB,QAAb,CAAsBuB,OAAtB;AACAxD,UAAAA,QAAQ,CAACyD,SAAT,CAAmB;AAAA;AAAA,wCAAWzB,KAA9B;AACD;;AACKH,QAAAA,SAAS,GAAG;AAAA;;AAAA;AAChB,gBAAM6B,MAAM,GAAG;AAAA;AAAA,0CAAc;AAAA;AAAA,4CAAYzB,QAAZ,CAAqBC,UAAnC,CAAf;;AACA,gBAAIwB,MAAJ,EAAY;AAAA;;AACV,kBAAI,KAAI,CAACC,SAAT,EAAoB;AAClB,sBAAM;AAAA;AAAA,kDAAa1B,QAAb,CAAsB2B,MAAtB,EAAN;AACD,eAFD,MAEO;AACL,sBAAM;AAAA;AAAA,kDAAa3B,QAAb,CAAsB4B,IAAtB,EAAN;AACD;;AAED,cAAA,KAAI,CAACC,UAAL;;AACA,cAAA,KAAI,CAACC,OAAL,GAAeL,MAAf;AACA;AAAA;AAAA,8CAAYzB,QAAZ,CAAqB+B,OAArB,GAA+B,KAAI,CAACD,OAAL,CAAaC,OAA5C;AACA;AAAA;AAAA,8CAAY/B,QAAZ,CAAqBgC,cAArB,GAAsC,0BAAA,KAAI,CAACF,OAAL,CAAaC,OAAb,CAAqB,CAArB,iFAAyBE,MAAzB,KAAmC,CAAzE;AACA;AAAA;AAAA,8CAAYjC,QAAZ,CAAqBkC,WAArB,GAAmC,KAAI,CAACJ,OAAL,CAAaC,OAAb,CAAqBE,MAArB,IAA+B,CAAlE;AAEA,oBAAME,OAAO,CAACC,GAAR,CAAY,CAChB,KAAI,CAACC,eAAL,EADgB,EAEhB,KAAI,CAACC,aAAL,EAFgB,EAGhB,KAAI,CAACC,cAAL,EAHgB,EAIhB,KAAI,CAACC,mBAAL,EAJgB,EAKhB,KAAI,CAACC,eAAL,EALgB,EAMhB,KAAI,CAACC,cAAL,EANgB,CAAZ,CAAN;AASA,oBAAMP,OAAO,CAACC,GAAR,CAAY,OACV,KAAI,CAACO,eAAL,EADU,QAEV;AAAA;AAAA,gDAAa3C,QAAb,CAAsB4C,OAAtB,EAFU,QAGV;AAAA;AAAA,gDAAa5C,QAAb,CAAsB6C,IAAtB,CAA2B,IAA3B,EAAiC,KAAI,CAACC,IAAtC,CAHU,CAAZ,CAAN;AAMA,cAAA,KAAI,CAACpB,SAAL,GAAiB,IAAjB;AACD,aA7BD,MA6BO;AACL,cAAA,KAAI,CAACV,IAAL;AACD;AAjCe;AAkCjB,SAlF0C,CAoF3C;;;AACAZ,QAAAA,SAAS,GAAG;AACV;AAAA;AAAA,0CAAYJ,QAAZ,CAAqBC,UAArB;AACA,eAAKL,SAAL;AACD,SAxF0C,CA0F3C;;;AACAiC,QAAAA,UAAU,GAAG;AACX,eAAKkB,KAAL,CAAWC,kBAAX;AACA;AAAA;AAAA,0CAAYhD,QAAZ,CAAqBiD,KAArB;AACD;;AAEDtD,QAAAA,cAAc,GAAG;AACf,eAAKoD,KAAL,GAAa;AAAA;AAAA,2CAAb;AACA,eAAKA,KAAL,CAAWG,SAAX,CAAqB,KAAK7B,IAA1B;AACA,eAAK0B,KAAL,CAAWI,eAAX,CAA2B,CAA3B;AACA,eAAKJ,KAAL,CAAWK,YAAX;AAAA;AAAA;AACD;;AACKf,QAAAA,eAAe,GAAG;AAAA;;AAAA;AACtB,gBAAMgB,OAAO,GAAG;AAAA;AAAA,6CAAhB;AACAA,YAAAA,OAAO,CAACH,SAAR,CAAkB,MAAI,CAACH,KAAvB;AACA,gBAAMO,eAAe,GAAGD,OAAO,CAACD,YAAR;AAAA;AAAA,iDAAxB;AACA,kBAAME,eAAe,CAACC,IAAhB,EAAN;;AACA,YAAA,MAAI,CAACC,OAAL;AALsB;AAMvB;;AAEKb,QAAAA,eAAe,GAAG;AAAA;;AAAA;AACtB,gBAAMc,MAAM,GAAG;AAAA;AAAA,6CAAf;AACAA,YAAAA,MAAM,CAACP,SAAP,CAAiB,MAAI,CAACH,KAAtB;AACA,gBAAMW,cAAc,GAAGD,MAAM,CAACL,YAAP;AAAA;AAAA,+CAAvB;AACA,kBAAMM,cAAc,CAACH,IAAf,CAAoB,MAAI,CAACzB,OAAL,CAAa2B,MAAjC,CAAN;AACA;AAAA;AAAA,4CAAYzD,QAAZ,CAAqByD,MAArB,GAA8BC,cAA9B;AACA;AAAA;AAAA,8CAAa1D,QAAb,CAAsB2D,IAAtB,CAA2B;AAAA;AAAA,8CAAaC,WAAxC,EAAqD,IAArD;AANsB;AAOvB;;AAEKrB,QAAAA,cAAc,GAAG;AAAA;;AAAA;AACrB;AAAA;AAAA,4CAAYvC,QAAZ,CAAqB6D,MAArB,GAA8B,EAA9B;AACA,gBAAMC,QAAQ,GAAG,EAAjB;;AAEA,iBAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,MAAI,CAACjC,OAAL,CAAakC,OAAb,CAAqB/B,MAAzC,EAAiD8B,CAAC,EAAlD,EAAsD;AACpD,kBAAME,KAAK,GAAG,MAAI,CAACnC,OAAL,CAAakC,OAAb,CAAqBD,CAArB,CAAd;AACA,kBAAM1C,IAAI,GAAG;AAAA;AAAA,+CAAb;AACAA,cAAAA,IAAI,CAAC6B,SAAL,CAAe,MAAI,CAACH,KAApB;AACA,kBAAMmB,OAAO,GAAGD,KAAK,CAACE,IAAN,KAAe;AAAA;AAAA,wDAAiBC,cAAhC;AAAA;AAAA;AAAA;AAAA,4DAAhB;AACA,kBAAMC,EAAE,GAAGhD,IAAI,CAAC+B,YAAL,CAAkBc,OAAlB,CAAX;AACAJ,cAAAA,QAAQ,CAACQ,IAAT,CAAcD,EAAE,CAACd,IAAH,CAAQU,KAAR,CAAd;AACA;AAAA;AAAA,8CAAYjE,QAAZ,CAAqB6D,MAArB,CAA4BS,IAA5B,CAAiCD,EAAjC;AACD;;AACDlC,YAAAA,OAAO,CAACC,GAAR,CAAY0B,QAAZ;AAbqB;AActB;;AAEKxB,QAAAA,aAAa,GAAG;AAAA;;AAAA;AACpB,gBAAMiC,IAAI,GAAG;AAAA;AAAA,6CAAb;AACAA,YAAAA,IAAI,CAACrB,SAAL,CAAe,MAAI,CAACH,KAApB;AACA,gBAAMyB,WAAW,GAAGD,IAAI,CAACnB,YAAL;AAAA;AAAA,2CAApB;AACA,kBAAMoB,WAAW,CAACjB,IAAZ,CAAiB,MAAI,CAACzB,OAAL,CAAayC,IAA9B,CAAN;AACA;AAAA;AAAA,4CAAYvE,QAAZ,CAAqBuE,IAArB,GAA4BC,WAA5B;AALoB;AAMrB;;AAEK9B,QAAAA,cAAc,GAAG;AAAA;;AAAA;AACrB,gBAAMoB,QAAQ,GAAG,EAAjB;AACA;AAAA;AAAA,4CAAY9D,QAAZ,CAAqByE,KAArB,GAA6B,EAA7B;;AACA,iBAAK,IAAIV,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,MAAI,CAACjC,OAAL,CAAa4C,MAAb,CAAoBzC,MAAxC,EAAgD8B,CAAC,EAAjD,EAAqD;AACnD,kBAAMU,KAAK,GAAG,MAAI,CAAC3C,OAAL,CAAa4C,MAAb,CAAoBX,CAApB,CAAd;AACA,kBAAM1C,IAAI,GAAG;AAAA;AAAA,+CAAb;AACAA,cAAAA,IAAI,CAAC6B,SAAL,CAAe,MAAI,CAACH,KAApB;AACA,kBAAM4B,YAAY,GAAGtD,IAAI,CAAC+B,YAAL;AAAA;AAAA,+CAArB;AACAU,cAAAA,QAAQ,CAACQ,IAAT,CAAcK,YAAY,CAACpB,IAAb,CAAkBkB,KAAlB,CAAd;AACA;AAAA;AAAA,8CAAYzE,QAAZ,CAAqByE,KAArB,CAA2BH,IAA3B,CAAgCK,YAAhC;AACD;;AACDxC,YAAAA,OAAO,CAACC,GAAR,CAAY0B,QAAZ;AAXqB;AAYtB;;AACKrB,QAAAA,eAAe,GAAG;AAAA;;AAAA;AACtB,gBAAMqB,QAAQ,GAAG,EAAjB;AACA;AAAA;AAAA,4CAAY9D,QAAZ,CAAqB4E,MAArB,GAA8B,EAA9B;;AACA,iBAAK,IAAIb,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,MAAI,CAACjC,OAAL,CAAa8C,MAAb,CAAoB3C,MAAxC,EAAgD8B,CAAC,EAAjD,EAAqD;AACnD,kBAAMc,IAAI,GAAG,MAAI,CAAC/C,OAAL,CAAa8C,MAAb,CAAoBb,CAApB,CAAb;AACA,kBAAM1C,IAAI,GAAG;AAAA;AAAA,+CAAb;AACAA,cAAAA,IAAI,CAAC6B,SAAL,CAAe,MAAI,CAACH,KAApB;AACA,kBAAM+B,aAAa,GAAGzD,IAAI,CAAC+B,YAAL;AAAA;AAAA,iDAAtB;AACAU,cAAAA,QAAQ,CAACQ,IAAT,CAAcQ,aAAa,CAACvB,IAAd,CAAmBsB,IAAnB,CAAd;AACA;AAAA;AAAA,8CAAY7E,QAAZ,CAAqB4E,MAArB,CAA4BN,IAA5B,CAAiCQ,aAAjC;AACD;;AACD3C,YAAAA,OAAO,CAACC,GAAR,CAAY0B,QAAZ;AAXsB;AAYvB;;AAEKtB,QAAAA,mBAAmB,GAAG;AAAA;;AAAA;AAC1B,YAAA,MAAI,CAACuC,UAAL,GAAkB;AAAA;AAAA,6CAAlB;;AACA,YAAA,MAAI,CAACA,UAAL,CAAgB7B,SAAhB,CAA0B,MAAI,CAACH,KAA/B;AAF0B;AAG3B;;AACKvC,QAAAA,cAAc,CAACwE,SAAD,EAA4BC,CAA5B,EAAuCC,CAAvC,EAAkD;AAAA;;AAAA;AACpE,gBAAMC,IAAI,GAAG;AAAA;AAAA,4CAAYnF,QAAZ,CAAqBoF,KAArB,CAA2BC,IAA3B,CAAgCC,CAAC,IAAIA,CAAC,CAACC,KAAF,KAAY;AAAA;AAAA,wDAAkBC,KAAnE,CAAb;;AACA,gBAAIL,IAAJ,EAAU;AACRA,cAAAA,IAAI,CAACF,CAAL,GAASA,CAAT;AACAE,cAAAA,IAAI,CAACD,CAAL,GAASA,CAAT;AACAC,cAAAA,IAAI,CAACH,SAAL,GAAiBA,SAAjB,CAHQ,CAIR;;AACAG,cAAAA,IAAI,CAAC9D,IAAL,CAAUoE,WAAV,CAAsBN,IAAI,CAACF,CAAL,GAAS1F,UAA/B,EAA2C,CAAC4F,IAAD,GAAQ7F,WAAnD;AACA6F,cAAAA,IAAI,CAACI,KAAL,GAAa;AAAA;AAAA,0DAAkBG,IAA/B;AACD,aAPD,MAOO;AACL,kBAAMrE,IAAI,GAAG;AAAA;AAAA,+CAAb;AACAA,cAAAA,IAAI,CAAC6B,SAAL,CAAe,MAAI,CAAC6B,UAApB;AACA,kBAAMY,YAAY,GAAGtE,IAAI,CAAC+B,YAAL;AAAA;AAAA,+CAArB;AACA,oBAAMuC,YAAY,CAACpC,IAAb,CAAkB;AACtB0B,gBAAAA,CADsB;AAEtBC,gBAAAA,CAFsB;AAGtBF,gBAAAA,SAHsB;AAItBO,gBAAAA,KAAK,EAAE;AAAA;AAAA,4DAAkBG,IAJH;AAKtBvB,gBAAAA,IAAI,EAAE;AAAA;AAAA,0DAAiByB;AALD,eAAlB,CAAN;AAOA;AAAA;AAAA,8CAAY5F,QAAZ,CAAqBoF,KAArB,CAA2Bd,IAA3B,CAAgCqB,YAAhC;AACD;AArBmE;AAsBrE;;AAEDnC,QAAAA,OAAO,GAAG;AACR,cAAM;AAAExB,YAAAA,cAAF;AAAkBE,YAAAA;AAAlB,cAAkC;AAAA;AAAA,0CAAYlC,QAApD;AACA,cAAM6F,GAAG,GAAI3D,WAAW,GAAG,CAAf,GAAoB3C,UAAhC;AACA,cAAMuG,GAAG,GAAIxG,WAAW,GAAG0C,cAAf,GAAiC,CAAjC,GAAqC,EAAjD;AACA,eAAKe,KAAL,CAAW0C,WAAX,CAAuB,CAACI,GAAxB,EAA6BC,GAA7B;AACA,eAAK/C,KAAL,CAAWgD,YAAX;AAAA;AAAA,4CAAsC3E,IAAtC;AACD;;AAEDd,QAAAA,UAAU,GAAG;AACX,cAAM;AAAE2E,YAAAA,CAAC,EAAEe,OAAL;AAAcd,YAAAA,CAAC,EAAEe;AAAjB,cAA6B;AAAA;AAAA,0CAAYjG,QAAZ,CAAqByD,MAAxD;AACA,cAAM;AAAEwB,YAAAA,CAAC,EAAEiB,KAAL;AAAYhB,YAAAA,CAAC,EAAEiB,KAAf;AAAsBZ,YAAAA,KAAK,EAAEa;AAA7B,cAA2C;AAAA;AAAA,0CAAYpG,QAAZ,CAAqBuE,IAAtE;;AACA,cAAI2B,KAAK,KAAKF,OAAV,IAAqBG,KAAK,KAAKF,OAA/B,IAA0CG,SAAS,KAAK;AAAA;AAAA,sDAAkBZ,KAA9E,EAAqF;AACnF;AAAA;AAAA,8CAAaxF,QAAb,CAAsB2D,IAAtB,CAA2B;AAAA;AAAA,8CAAaxD,UAAxC;AACD;AACF;;AAEDO,QAAAA,MAAM,GAAG;AACP,cAAMyE,IAAa,GAAG;AACpB1B,YAAAA,MAAM,EAAE;AACNwB,cAAAA,CAAC,EAAE;AAAA;AAAA,8CAAYjF,QAAZ,CAAqByD,MAArB,CAA4BwB,CADzB;AAENC,cAAAA,CAAC,EAAE;AAAA;AAAA,8CAAYlF,QAAZ,CAAqByD,MAArB,CAA4ByB,CAFzB;AAGNf,cAAAA,IAAI,EAAE;AAAA;AAAA,8CAAYnE,QAAZ,CAAqByD,MAArB,CAA4BU,IAH5B;AAINa,cAAAA,SAAS,EAAE;AAAA;AAAA,8CAAYhF,QAAZ,CAAqByD,MAArB,CAA4BuB,SAJjC;AAKNO,cAAAA,KAAK,EACH;AAAA;AAAA,8CAAYvF,QAAZ,CAAqByD,MAArB,CAA4B8B,KAA5B,KAAsC;AAAA;AAAA,0DAAkBc,QAAxD,IACA;AAAA;AAAA,8CAAYrG,QAAZ,CAAqByD,MAArB,CAA4B8B,KAA5B,KAAsC;AAAA;AAAA,0DAAkBC,KADxD,IAEA;AAAA;AAAA,8CAAYxF,QAAZ,CAAqByD,MAArB,CAA4B8B,KAA5B,KAAsC;AAAA;AAAA,0DAAkBG,IAFxD,GAGI;AAAA;AAAA,8CAAY1F,QAAZ,CAAqByD,MAArB,CAA4B8B,KAHhC,GAII;AAAA;AAAA,0DAAkBG;AAVlB,aADY;AAapBnB,YAAAA,IAAI,EAAE;AACJU,cAAAA,CAAC,EAAE;AAAA;AAAA,8CAAYjF,QAAZ,CAAqBuE,IAArB,CAA0BU,CADzB;AAEJC,cAAAA,CAAC,EAAE;AAAA;AAAA,8CAAYlF,QAAZ,CAAqBuE,IAArB,CAA0BW,CAFzB;AAGJf,cAAAA,IAAI,EAAE;AAAA;AAAA,8CAAYnE,QAAZ,CAAqBuE,IAArB,CAA0BJ,IAH5B;AAIJa,cAAAA,SAAS,EAAE;AAAA;AAAA,8CAAYhF,QAAZ,CAAqBuE,IAArB,CAA0BS,SAJjC;AAKJO,cAAAA,KAAK,EAAE;AAAA;AAAA,8CAAYvF,QAAZ,CAAqBuE,IAArB,CAA0BgB;AAL7B,aAbc;AAoBpBvB,YAAAA,OAAO,EAAE;AAAA;AAAA,4CAAYhE,QAAZ,CAAqB6D,MAArB,CAA4ByC,GAA5B,CAAgC;AAAA,kBAAC;AAAErB,gBAAAA,CAAF;AAAKC,gBAAAA,CAAL;AAAQF,gBAAAA,SAAR;AAAmBO,gBAAAA,KAAnB;AAA0BpB,gBAAAA;AAA1B,eAAD;AAAA,qBAAuC;AAC9Ec,gBAAAA,CAD8E;AAE9EC,gBAAAA,CAF8E;AAG9EF,gBAAAA,SAH8E;AAI9EO,gBAAAA,KAJ8E;AAK9EpB,gBAAAA;AAL8E,eAAvC;AAAA,aAAhC,CApBW;AA2BpBO,YAAAA,MAAM,EAAE;AAAA;AAAA,4CAAY1E,QAAZ,CAAqByE,KAArB,CAA2B6B,GAA3B,CAA+B;AAAA,kBAAC;AAAErB,gBAAAA,CAAF;AAAKC,gBAAAA,CAAL;AAAQF,gBAAAA,SAAR;AAAmBO,gBAAAA,KAAnB;AAA0BpB,gBAAAA;AAA1B,eAAD;AAAA,qBAAuC;AAC5Ec,gBAAAA,CAD4E;AAE5EC,gBAAAA,CAF4E;AAG5EF,gBAAAA,SAH4E;AAI5EO,gBAAAA,KAJ4E;AAK5EpB,gBAAAA;AAL4E,eAAvC;AAAA,aAA/B,CA3BY;AAkCpBS,YAAAA,MAAM,EAAE;AAAA;AAAA,4CAAY5E,QAAZ,CAAqB4E,MAArB,CAA4B0B,GAA5B,CAAgC;AAAA,kBAAC;AAAErB,gBAAAA,CAAF;AAAKC,gBAAAA,CAAL;AAAQqB,gBAAAA,KAAR;AAAepC,gBAAAA;AAAf,eAAD;AAAA,qBAA4B;AAClEc,gBAAAA,CADkE;AAElEC,gBAAAA,CAFkE;AAGlEqB,gBAAAA,KAHkE;AAIlEpC,gBAAAA;AAJkE,eAA5B;AAAA,aAAhC;AAlCY,WAAtB;AAyCA;AAAA;AAAA,0CAAYnE,QAAZ,CAAqBU,MAArB,CAA4B4D,IAA5B,CAAiCa,IAAjC;AACD;;AACDvE,QAAAA,MAAM,GAAG;AACP,cAAMuE,IAAI,GAAG;AAAA;AAAA,0CAAYnF,QAAZ,CAAqBU,MAArB,CAA4B8F,GAA5B,EAAb;;AACA,cAAIrB,IAAJ,EAAU;AACR;AAAA;AAAA,4CAAYnF,QAAZ,CAAqByD,MAArB,CAA4BwB,CAA5B,GAAgC;AAAA;AAAA,4CAAYjF,QAAZ,CAAqByD,MAArB,CAA4BgD,OAA5B,GAAsCtB,IAAI,CAAC1B,MAAL,CAAYwB,CAAlF;AACA;AAAA;AAAA,4CAAYjF,QAAZ,CAAqByD,MAArB,CAA4ByB,CAA5B,GAAgC;AAAA;AAAA,4CAAYlF,QAAZ,CAAqByD,MAArB,CAA4BiD,OAA5B,GAAsCvB,IAAI,CAAC1B,MAAL,CAAYyB,CAAlF;AACA;AAAA;AAAA,4CAAYlF,QAAZ,CAAqByD,MAArB,CAA4B8B,KAA5B,GAAoCJ,IAAI,CAAC1B,MAAL,CAAY8B,KAAhD;AACA;AAAA;AAAA,4CAAYvF,QAAZ,CAAqByD,MAArB,CAA4BuB,SAA5B,GAAwCG,IAAI,CAAC1B,MAAL,CAAYuB,SAApD;AAEA;AAAA;AAAA,4CAAYhF,QAAZ,CAAqBuE,IAArB,CAA0BU,CAA1B,GAA8BE,IAAI,CAACZ,IAAL,CAAUU,CAAxC;AACA;AAAA;AAAA,4CAAYjF,QAAZ,CAAqBuE,IAArB,CAA0BW,CAA1B,GAA8BC,IAAI,CAACZ,IAAL,CAAUW,CAAxC;AACA;AAAA;AAAA,4CAAYlF,QAAZ,CAAqBuE,IAArB,CAA0BgB,KAA1B,GAAkCJ,IAAI,CAACZ,IAAL,CAAUgB,KAA5C;AACA;AAAA;AAAA,4CAAYvF,QAAZ,CAAqBuE,IAArB,CAA0BS,SAA1B,GAAsCG,IAAI,CAACZ,IAAL,CAAUS,SAAhD;;AAEA,iBAAK,IAAIjB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG;AAAA;AAAA,4CAAY/D,QAAZ,CAAqB6D,MAArB,CAA4B5B,MAAhD,EAAwD8B,CAAC,EAAzD,EAA6D;AAC3D,kBAAME,KAAK,GAAGkB,IAAI,CAACnB,OAAL,CAAaD,CAAb,CAAd;AACA;AAAA;AAAA,8CAAY/D,QAAZ,CAAqB6D,MAArB,CAA4BE,CAA5B,EAA+BkB,CAA/B,GAAmChB,KAAK,CAACgB,CAAzC;AACA;AAAA;AAAA,8CAAYjF,QAAZ,CAAqB6D,MAArB,CAA4BE,CAA5B,EAA+BmB,CAA/B,GAAmCjB,KAAK,CAACiB,CAAzC;AACA;AAAA;AAAA,8CAAYlF,QAAZ,CAAqB6D,MAArB,CAA4BE,CAA5B,EAA+BwB,KAA/B,GAAuCtB,KAAK,CAACsB,KAA7C;AACA;AAAA;AAAA,8CAAYvF,QAAZ,CAAqB6D,MAArB,CAA4BE,CAA5B,EAA+BiB,SAA/B,GAA2Cf,KAAK,CAACe,SAAjD;AACA;AAAA;AAAA,8CAAYhF,QAAZ,CAAqB6D,MAArB,CAA4BE,CAA5B,EAA+BI,IAA/B,GAAsCF,KAAK,CAACE,IAA5C;AACD;;AAED,iBAAK,IAAIJ,EAAC,GAAG,CAAb,EAAgBA,EAAC,GAAG;AAAA;AAAA,4CAAY/D,QAAZ,CAAqByE,KAArB,CAA2BxC,MAA/C,EAAuD8B,EAAC,EAAxD,EAA4D;AAC1D,kBAAMU,KAAK,GAAGU,IAAI,CAACT,MAAL,CAAYX,EAAZ,CAAd;AACA;AAAA;AAAA,8CAAY/D,QAAZ,CAAqByE,KAArB,CAA2BV,EAA3B,EAA8BkB,CAA9B,GAAkCR,KAAK,CAACQ,CAAxC;AACA;AAAA;AAAA,8CAAYjF,QAAZ,CAAqByE,KAArB,CAA2BV,EAA3B,EAA8BmB,CAA9B,GAAkCT,KAAK,CAACS,CAAxC;AACA;AAAA;AAAA,8CAAYlF,QAAZ,CAAqByE,KAArB,CAA2BV,EAA3B,EAA8BwB,KAA9B,GAAsCd,KAAK,CAACc,KAA5C;AACA;AAAA;AAAA,8CAAYvF,QAAZ,CAAqByE,KAArB,CAA2BV,EAA3B,EAA8BiB,SAA9B,GAA0CP,KAAK,CAACO,SAAhD;AACD;;AAED,iBAAK,IAAIjB,GAAC,GAAG,CAAb,EAAgBA,GAAC,GAAG;AAAA;AAAA,4CAAY/D,QAAZ,CAAqB4E,MAArB,CAA4B3C,MAAhD,EAAwD8B,GAAC,EAAzD,EAA6D;AAC3D,kBAAM4C,KAAK,GAAGxB,IAAI,CAACP,MAAL,CAAYb,GAAZ,CAAd;AACA;AAAA;AAAA,8CAAY/D,QAAZ,CAAqB4E,MAArB,CAA4Bb,GAA5B,EAA+BkB,CAA/B,GAAmC0B,KAAK,CAAC1B,CAAzC;AACA;AAAA;AAAA,8CAAYjF,QAAZ,CAAqB4E,MAArB,CAA4Bb,GAA5B,EAA+BmB,CAA/B,GAAmCyB,KAAK,CAACzB,CAAzC;AACA;AAAA;AAAA,8CAAYlF,QAAZ,CAAqB4E,MAArB,CAA4Bb,GAA5B,EAA+BwC,KAA/B,GAAuCI,KAAK,CAACJ,KAA7C;AACA;AAAA;AAAA,8CAAYvG,QAAZ,CAAqB4E,MAArB,CAA4Bb,GAA5B,EAA+BI,IAA/B,GAAsCwC,KAAK,CAACxC,IAA5C;AACD;AACF;AACF;;AAxS0C,O;;;;;iBAEzB,I","sourcesContent":["import { _decorator, Component, Node, director, AudioClip } from 'cc'\nimport { ILevel } from '../../Level'\nimport level from '../../Level'\nimport DataManager, { IRecord } from '../RunTime/DataManager'\nimport { TlieMapManager } from '../Tile/TlieMapManager'\nimport EventManager from '../RunTime/EventManager'\nimport { DRIECTION_ENUM, ENTINY_STATE_ENUM, ENTITY_TYPE_ENUM, EVENTMANAGER, SCENE_ENUM } from '../../Enums'\nimport { creatUINode } from '../Utiils/index'\nimport { PlayerManager } from '../Player/PlayerManager'\nimport { WoodenSkeletonManager } from '../WoodenSkeleton/WoodenSkeletonManager'\nimport { DoorManager } from '../Door/DoorManager'\nimport { IronskeletonManager } from '../ironskeleton/IronskeletonManager'\nimport { BurstManager } from '../Burst/BurstManager'\nimport { SpikesManager } from '../spikes/SpikesManager'\nimport { SmokeManager } from '../smoke/SmokeManager'\nimport FaderManager from '../RunTime/FaderManager'\nimport { ShakeManager } from '../UI/ShakeManager'\nimport MusicManager from '../RunTime/MusicManager'\nconst { ccclass, property } = _decorator\n\n/**\n * Predefined variables\n * Name = BattleManager\n * DateTime = Fri May 19 2023 14:21:20 GMT+0800 (中国标准时间)\n * Author = 杰哥真好\n * FileBasename = BattleManager.ts\n * FileBasenameNoExtension = BattleManager\n * URL = db://assets/Scripts/Scene/BattleManager.ts\n * ManualUrl = https://docs.cocos.com/creator/3.4/manual/zh/\n *\n */\nconst TILE_HEIGHT = 55\nconst TILE_WIDTH = 55\n@ccclass('BattleManager')\nexport class BattleManager extends Component {\n  @property(AudioClip)\n  clip: AudioClip = null\n  levelss: ILevel //关卡\n  stage: Node = null\n  smokeLayer: Node = null\n  private hasinited: boolean = false //第一次从菜单进来的时候，入场fade效果不一样，特殊处理一下\n\n  start() {\n    this.initScence()\n  }\n  initScence() {\n    this.generaterStage()\n    this.initLevel()\n  }\n\n  onLoad() {\n    director.preloadScene(SCENE_ENUM.strat)\n    DataManager.Instance.levelindex = 1\n    EventManager.Instance.on(EVENTMANAGER.NEXT_LEVEL, this.nextlevel, this)\n    EventManager.Instance.on(EVENTMANAGER.PLAYERMOVE_END, this.CheeckDoor, this)\n    EventManager.Instance.on(EVENTMANAGER.SMOKE_SHOW, this.generaterSmoke, this)\n    EventManager.Instance.on(EVENTMANAGER.RECORD_STEP, this.record, this)\n    EventManager.Instance.on(EVENTMANAGER.REVOKE_STEP, this.revoke, this)\n    EventManager.Instance.on(EVENTMANAGER.RESTART, this.reStart, this)\n    EventManager.Instance.on(EVENTMANAGER.EXIT, this.exit, this)\n  }\n\n  onDestroy() {\n    EventManager.Instance.off(EVENTMANAGER.NEXT_LEVEL, this.nextlevel)\n    EventManager.Instance.off(EVENTMANAGER.PLAYERMOVE_END, this.CheeckDoor)\n    EventManager.Instance.off(EVENTMANAGER.SMOKE_SHOW, this.generaterSmoke)\n    EventManager.Instance.off(EVENTMANAGER.RECORD_STEP, this.record)\n    EventManager.Instance.off(EVENTMANAGER.REVOKE_STEP, this.revoke)\n    EventManager.Instance.off(EVENTMANAGER.RESTART, this.reStart)\n    EventManager.Instance.off(EVENTMANAGER.EXIT, this.exit)\n    EventManager.Instance.clear()\n  }\n  reStart() {\n    MusicManager.Instance.stop()\n    this.initLevel()\n  }\n\n  exit() {\n    this.node.destroy()\n    MusicManager.Instance.destory()\n    director.loadScene(SCENE_ENUM.strat)\n  }\n  async initLevel() {\n    const levels = level[`level${DataManager.Instance.levelindex}`]\n    if (levels) {\n      if (this.hasinited) {\n        await FaderManager.Instance.fadeIn()\n      } else {\n        await FaderManager.Instance.mask()\n      }\n\n      this.clearlevel()\n      this.levelss = levels\n      DataManager.Instance.mapInfo = this.levelss.mapInfo\n      DataManager.Instance.mapColumnCount = this.levelss.mapInfo[0]?.length || 0\n      DataManager.Instance.mapRowCount = this.levelss.mapInfo.length || 0\n\n      await Promise.all([\n        this.generateTileMap(),\n        this.generaterDoor(),\n        this.generaterEnemy(),\n        this.generaterSmokeLayer(),\n        this.generaterSpikes(),\n        this.generaterBurst(),\n      ])\n\n      await Promise.all([\n        await this.generaterPlayer(),\n        await FaderManager.Instance.fadeOut(),\n        await MusicManager.Instance.play(true, this.clip),\n      ])\n\n      this.hasinited = true\n    } else {\n      this.exit()\n    }\n  }\n\n  // 下一个关卡\n  nextlevel() {\n    DataManager.Instance.levelindex++\n    this.initLevel()\n  }\n\n  // 清除原先等级\n  clearlevel() {\n    this.stage.destroyAllChildren()\n    DataManager.Instance.reset()\n  }\n\n  generaterStage() {\n    this.stage = creatUINode()\n    this.stage.setParent(this.node)\n    this.stage.setSiblingIndex(2)\n    this.stage.addComponent(ShakeManager)\n  }\n  async generateTileMap() {\n    const tlieMap = creatUINode()\n    tlieMap.setParent(this.stage)\n    const TlieMapManagers = tlieMap.addComponent(TlieMapManager)\n    await TlieMapManagers.init()\n    this.adaptor()\n  }\n\n  async generaterPlayer() {\n    const player = creatUINode()\n    player.setParent(this.stage)\n    const playerManagers = player.addComponent(PlayerManager)\n    await playerManagers.init(this.levelss.player)\n    DataManager.Instance.player = playerManagers\n    EventManager.Instance.emit(EVENTMANAGER.PLAYER_BORN, true)\n  }\n\n  async generaterEnemy() {\n    DataManager.Instance.enemes = []\n    const promises = []\n\n    for (let i = 0; i < this.levelss.enemies.length; i++) {\n      const enemy = this.levelss.enemies[i]\n      const node = creatUINode()\n      node.setParent(this.stage)\n      const Manager = enemy.type === ENTITY_TYPE_ENUM.WOODENSKELETON ? WoodenSkeletonManager : IronskeletonManager\n      const MA = node.addComponent(Manager)\n      promises.push(MA.init(enemy))\n      DataManager.Instance.enemes.push(MA)\n    }\n    Promise.all(promises)\n  }\n\n  async generaterDoor() {\n    const door = creatUINode()\n    door.setParent(this.stage)\n    const doorManager = door.addComponent(DoorManager)\n    await doorManager.init(this.levelss.door)\n    DataManager.Instance.door = doorManager\n  }\n\n  async generaterBurst() {\n    const promises = []\n    DataManager.Instance.burst = []\n    for (let i = 0; i < this.levelss.bursts.length; i++) {\n      const burst = this.levelss.bursts[i]\n      const node = creatUINode()\n      node.setParent(this.stage)\n      const burstManager = node.addComponent(BurstManager)\n      promises.push(burstManager.init(burst))\n      DataManager.Instance.burst.push(burstManager)\n    }\n    Promise.all(promises)\n  }\n  async generaterSpikes() {\n    const promises = []\n    DataManager.Instance.spikes = []\n    for (let i = 0; i < this.levelss.spikes.length; i++) {\n      const spik = this.levelss.spikes[i]\n      const node = creatUINode()\n      node.setParent(this.stage)\n      const spikesManager = node.addComponent(SpikesManager)\n      promises.push(spikesManager.init(spik))\n      DataManager.Instance.spikes.push(spikesManager)\n    }\n    Promise.all(promises)\n  }\n\n  async generaterSmokeLayer() {\n    this.smokeLayer = creatUINode()\n    this.smokeLayer.setParent(this.stage)\n  }\n  async generaterSmoke(direction: DRIECTION_ENUM, x: number, y: number) {\n    const item = DataManager.Instance.smoke.find(s => s.state === ENTINY_STATE_ENUM.DEATH)\n    if (item) {\n      item.x = x\n      item.y = y\n      item.direction = direction\n      // item.node.setPosition(item.x * TILE_WIDTH - TILE_WIDTH * 1.5, -item * TILE_HEIGHT + TILE_HEIGHT * 1.5)\n      item.node.setPosition(item.x * TILE_WIDTH, -item * TILE_HEIGHT)\n      item.state = ENTINY_STATE_ENUM.IDLE\n    } else {\n      const node = creatUINode()\n      node.setParent(this.smokeLayer)\n      const smokemanager = node.addComponent(SmokeManager)\n      await smokemanager.init({\n        x,\n        y,\n        direction,\n        state: ENTINY_STATE_ENUM.IDLE,\n        type: ENTITY_TYPE_ENUM.SMOKE,\n      })\n      DataManager.Instance.smoke.push(smokemanager)\n    }\n  }\n\n  adaptor() {\n    const { mapColumnCount, mapRowCount } = DataManager.Instance\n    const DiX = (mapRowCount / 2) * TILE_WIDTH\n    const Diy = (TILE_HEIGHT * mapColumnCount) / 2 + 80\n    this.stage.setPosition(-DiX, Diy)\n    this.stage.getComponent(ShakeManager).stop()\n  }\n\n  CheeckDoor() {\n    const { x: playerX, y: playerY } = DataManager.Instance.player\n    const { x: doorX, y: doorY, state: doorState } = DataManager.Instance.door\n    if (doorX === playerX && doorY === playerY && doorState === ENTINY_STATE_ENUM.DEATH) {\n      EventManager.Instance.emit(EVENTMANAGER.NEXT_LEVEL)\n    }\n  }\n\n  record() {\n    const item: IRecord = {\n      player: {\n        x: DataManager.Instance.player.x,\n        y: DataManager.Instance.player.y,\n        type: DataManager.Instance.player.type,\n        direction: DataManager.Instance.player.direction,\n        state:\n          DataManager.Instance.player.state === ENTINY_STATE_ENUM.AIRDEATH ||\n          DataManager.Instance.player.state === ENTINY_STATE_ENUM.DEATH ||\n          DataManager.Instance.player.state === ENTINY_STATE_ENUM.IDLE\n            ? DataManager.Instance.player.state\n            : ENTINY_STATE_ENUM.IDLE,\n      },\n      door: {\n        x: DataManager.Instance.door.x,\n        y: DataManager.Instance.door.y,\n        type: DataManager.Instance.door.type,\n        direction: DataManager.Instance.door.direction,\n        state: DataManager.Instance.door.state,\n      },\n      enemies: DataManager.Instance.enemes.map(({ x, y, direction, state, type }) => ({\n        x,\n        y,\n        direction,\n        state,\n        type,\n      })),\n      bursts: DataManager.Instance.burst.map(({ x, y, direction, state, type }) => ({\n        x,\n        y,\n        direction,\n        state,\n        type,\n      })),\n      spikes: DataManager.Instance.spikes.map(({ x, y, count, type }) => ({\n        x,\n        y,\n        count,\n        type,\n      })),\n    }\n    DataManager.Instance.record.push(item)\n  }\n  revoke() {\n    const item = DataManager.Instance.record.pop()\n    if (item) {\n      DataManager.Instance.player.x = DataManager.Instance.player.targetX = item.player.x\n      DataManager.Instance.player.y = DataManager.Instance.player.targetY = item.player.y\n      DataManager.Instance.player.state = item.player.state\n      DataManager.Instance.player.direction = item.player.direction\n\n      DataManager.Instance.door.x = item.door.x\n      DataManager.Instance.door.y = item.door.y\n      DataManager.Instance.door.state = item.door.state\n      DataManager.Instance.door.direction = item.door.direction\n\n      for (let i = 0; i < DataManager.Instance.enemes.length; i++) {\n        const enemy = item.enemies[i]\n        DataManager.Instance.enemes[i].x = enemy.x\n        DataManager.Instance.enemes[i].y = enemy.y\n        DataManager.Instance.enemes[i].state = enemy.state\n        DataManager.Instance.enemes[i].direction = enemy.direction\n        DataManager.Instance.enemes[i].type = enemy.type\n      }\n\n      for (let i = 0; i < DataManager.Instance.burst.length; i++) {\n        const burst = item.bursts[i]\n        DataManager.Instance.burst[i].x = burst.x\n        DataManager.Instance.burst[i].y = burst.y\n        DataManager.Instance.burst[i].state = burst.state\n        DataManager.Instance.burst[i].direction = burst.direction\n      }\n\n      for (let i = 0; i < DataManager.Instance.spikes.length; i++) {\n        const spike = item.spikes[i]\n        DataManager.Instance.spikes[i].x = spike.x\n        DataManager.Instance.spikes[i].y = spike.y\n        DataManager.Instance.spikes[i].count = spike.count\n        DataManager.Instance.spikes[i].type = spike.type\n      }\n    }\n  }\n}\n"]}