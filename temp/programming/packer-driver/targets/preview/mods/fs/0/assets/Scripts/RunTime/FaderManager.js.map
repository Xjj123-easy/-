{"version":3,"sources":["file:///E:/cocosproject/Dome/cocos-start-demo/assets/Scripts/RunTime/FaderManager.ts"],"names":["FaderManager","RenderRoot2D","game","Singleton","DrawManager","DURATION","creatUINode","Instance","GetInstance","fader","_fader","root","addComponent","faderNode","setParent","init","addPersistRootNode","fadeIn","duration","fadeOut","mask"],"mappings":";;;iGAKqBA,Y;;;;;;;;;;;;;;;;;;;;;;;;;;;AALZC,MAAAA,Y,OAAAA,Y;AAAcC,MAAAA,I,OAAAA,I;;AAChBC,MAAAA,S;;AACEC,MAAAA,W,iBAAAA,W;AAAaC,MAAAA,Q,iBAAAA,Q;;AACbC,MAAAA,W,iBAAAA,W;;;;;;;yBAEYN,Y,GAAN,MAAMA,YAAN;AAAA;AAAA,kCAAqC;AAAA;AAAA;;AAAA,0CACpB,IADoB;AAAA;;AAE/B,mBAARO,QAAQ,GAAG;AACpB,iBAAO,MAAMC,WAAN,EAAP;AACD;;AACQ,YAALC,KAAK,GAAG;AACV,cAAI,KAAKC,MAAL,KAAgB,IAApB,EAA0B;AACxB,mBAAO,KAAKA,MAAZ;AACD;;AACD,cAAMC,IAAI,GAAG;AAAA;AAAA,2CAAb;AACAA,UAAAA,IAAI,CAACC,YAAL,CAAkBX,YAAlB;AAEA,cAAMY,SAAS,GAAG;AAAA;AAAA,2CAAlB;AACAA,UAAAA,SAAS,CAACC,SAAV,CAAoBH,IAApB;AACA,eAAKD,MAAL,GAAcG,SAAS,CAACD,YAAV;AAAA;AAAA,yCAAd;;AACA,eAAKF,MAAL,CAAYK,IAAZ;;AACAb,UAAAA,IAAI,CAACc,kBAAL,CAAwBL,IAAxB;AACA,iBAAO,KAAKD,MAAZ;AACD;;AACDO,QAAAA,MAAM,CAACC,QAAD,EAA8B;AAAA,cAA7BA,QAA6B;AAA7BA,YAAAA,QAA6B;AAAA;AAAA;AAAA;;AAClC,iBAAO,KAAKT,KAAL,CAAWQ,MAAX,CAAkBC,QAAlB,CAAP;AACD;;AACDC,QAAAA,OAAO,CAACD,QAAD,EAA8B;AAAA,cAA7BA,QAA6B;AAA7BA,YAAAA,QAA6B;AAAA;AAAA;AAAA;;AACnC,iBAAO,KAAKT,KAAL,CAAWU,OAAX,CAAmBD,QAAnB,CAAP;AACD;;AACDE,QAAAA,IAAI,GAAG;AACL,iBAAO,KAAKX,KAAL,CAAWW,IAAX,EAAP;AACD;;AA3BiD,O","sourcesContent":["import { RenderRoot2D, game } from 'cc'\nimport Singleton from '../Base/Singleton'\nimport { DrawManager, DURATION } from '../UI/DrawManager'\nimport { creatUINode } from '../Utiils'\n\nexport default class FaderManager extends Singleton {\n  private _fader: DrawManager = null\n  static get Instance() {\n    return super.GetInstance<FaderManager>()\n  }\n  get fader() {\n    if (this._fader !== null) {\n      return this._fader\n    }\n    const root = creatUINode()\n    root.addComponent(RenderRoot2D)\n\n    const faderNode = creatUINode()\n    faderNode.setParent(root)\n    this._fader = faderNode.addComponent(DrawManager)\n    this._fader.init()\n    game.addPersistRootNode(root)\n    return this._fader\n  }\n  fadeIn(duration: number = DURATION) {\n    return this.fader.fadeIn(duration)\n  }\n  fadeOut(duration: number = DURATION) {\n    return this.fader.fadeOut(duration)\n  }\n  mask() {\n    return this.fader.mask()\n  }\n}\n"]}