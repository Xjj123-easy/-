{"version":3,"sources":["file:///E:/cocosproject/Dome/cocos-start-demo/assets/Scripts/Base/StateMachine.ts"],"names":["_decorator","Component","FMS_PARAMS_ENUM","ccclass","property","GetParamsTrigger","type","TRIGER","value","GetParamsNUmber","NUMBER","StateMachine","Map","currentState","_currentState","newState","run","getParams","paramName","param","has","get","setParams","reseTrigger"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAASA,MAAAA,U,OAAAA,U;AAAYC,MAAAA,S,OAAAA,S;;AACZC,MAAAA,e,iBAAAA,e;;;;;;;OAGH;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBJ,U;;kCASjBK,gB,GAAmB,MAAM;AACpC,eAAO;AACLC,UAAAA,IAAI,EAAE;AAAA;AAAA,kDAAgBC,MADjB;AAELC,UAAAA,KAAK,EAAE;AAFF,SAAP;AAID,O;;iCAEYC,e,GAAkB,MAAM;AACnC,eAAO;AACLH,UAAAA,IAAI,EAAE;AAAA;AAAA,kDAAgBI,MADjB;AAELF,UAAAA,KAAK,EAAE;AAFF,SAAP;AAID,O;;8BAGqBG,Y,WADrBR,OAAO,CAAC,cAAD,C,yBAAR,MACsBQ,YADtB,SAC2CV,SAD3C,CACqD;AAAA;AAAA;;AAAA,iDAEF,IAFE;;AAAA;;AAAA,+CAMC,EAND;;AAAA,yCAQlB,IAAIW,GAAJ,EARkB;;AAAA,gDAWE,IAAIA,GAAJ,EAXF;AAAA;;AAanC,YAAZC,YAAY,GAAG;AACjB,iBAAO,KAAKC,aAAZ;AACD;;AAEe,YAAZD,YAAY,CAACE,QAAD,EAAW;AACzB,cAAI,CAACA,QAAL,EAAe;AACb;AACD;;AACD,eAAKD,aAAL,GAAqBC,QAArB;;AACA,eAAKD,aAAL,CAAmBE,GAAnB;AACD;;AAEDC,QAAAA,SAAS,CAACC,SAAD,EAAoB;AAC3B,cAAI,KAAKC,KAAL,CAAWC,GAAX,CAAeF,SAAf,CAAJ,EAA+B;AAC7B,mBAAO,KAAKC,KAAL,CAAWE,GAAX,CAAeH,SAAf,EAA0BV,KAAjC;AACD;AACF;;AAEDc,QAAAA,SAAS,CAACJ,SAAD,EAAoBV,KAApB,EAA2C;AAClD,cAAI,KAAKW,KAAL,CAAWC,GAAX,CAAeF,SAAf,CAAJ,EAA+B;AAC7B,iBAAKC,KAAL,CAAWE,GAAX,CAAeH,SAAf,EAA0BV,KAA1B,GAAkCA,KAAlC;AAEA,iBAAKQ,GAAL;AACA,iBAAKO,WAAL;AACD;AACF;;AACDA,QAAAA,WAAW,GAAG;AACZ;AACA,eAAK,IAAM,GAAGf,KAAH,CAAX,IAAwB,KAAKW,KAA7B,EAAoC;AAClC,gBAAIX,KAAK,CAACF,IAAN,KAAe;AAAA;AAAA,oDAAgBC,MAAnC,EAA2C;AACzCC,cAAAA,KAAK,CAACA,KAAN,GAAc,KAAd;AACD;AACF;AACF;;AA9CkD,O","sourcesContent":["import { _decorator, Component, Node, AnimationClip, Animation, SpriteFrame } from 'cc'\nimport { FMS_PARAMS_ENUM, PARAMS_NAME_ENUM } from '../../Enums'\nimport { State } from '../Base/State'\nimport SubStateMachine from './SubStateMachine'\nconst { ccclass, property } = _decorator\n\ntype ParamValueType = boolean | number\n\nexport interface IParmValue {\n  type: FMS_PARAMS_ENUM\n  value: ParamValueType\n}\n\nexport const GetParamsTrigger = () => {\n  return {\n    type: FMS_PARAMS_ENUM.TRIGER,\n    value: false,\n  }\n}\n\nexport const GetParamsNUmber = () => {\n  return {\n    type: FMS_PARAMS_ENUM.NUMBER,\n    value: 0,\n  }\n}\n\n@ccclass('StateMachine')\nexport abstract class StateMachine extends Component {\n  //当前状态 播放动画\n  private _currentState: State | SubStateMachine = null\n\n  animationComponent: Animation\n\n  public waitingList: Array<Promise<SpriteFrame[]>> = []\n  //参数列表\n  param: Map<string, IParmValue> = new Map()\n\n  //状态机列表\n  stateMachine: Map<string, State | SubStateMachine> = new Map()\n\n  get currentState() {\n    return this._currentState\n  }\n\n  set currentState(newState) {\n    if (!newState) {\n      return\n    }\n    this._currentState = newState\n    this._currentState.run()\n  }\n\n  getParams(paramName: string) {\n    if (this.param.has(paramName)) {\n      return this.param.get(paramName).value\n    }\n  }\n\n  setParams(paramName: string, value: ParamValueType) {\n    if (this.param.has(paramName)) {\n      this.param.get(paramName).value = value\n\n      this.run()\n      this.reseTrigger()\n    }\n  }\n  reseTrigger() {\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    for (const [, value] of this.param) {\n      if (value.type === FMS_PARAMS_ENUM.TRIGER) {\n        value.value = false\n      }\n    }\n  }\n\n  abstract run(): void\n  abstract init(): void\n}\n"]}