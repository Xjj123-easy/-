{"version":3,"sources":["file:///E:/cocosproject/Dome/cocos-start-demo/assets/Scripts/UI/ShakeManager.ts"],"names":["_decorator","Component","game","EVENTMANAGER","SHAKE_DIRECTION_ENMU","EventManager","ccclass","ShakeManager","x","y","onLoad","Instance","on","SHAKE_SHOW","onshake","onDstroy","off","stop","isShaking","update","duration","amount","frequency","crruentTime","totalTime","oldTime","offest","Math","sin","PI","shakeType","TOP","node","setPosition","oldPos","BOTTOM","LEFT","RIGHT","inputDirection","position"],"mappings":"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","sourcesContent":["import { _decorator, Component, game } from 'cc'\nimport { EVENTMANAGER, SHAKE_DIRECTION_ENMU } from '../../Enums'\nimport EventManager from '../RunTime/EventManager'\nconst { ccclass } = _decorator\n\n@ccclass('ShakeManager')\nexport class ShakeManager extends Component {\n  private isShaking: boolean = false\n  private oldTime: number = 0\n  private oldPos: { x: number; y: number } = { x: 0, y: 0 }\n  private shakeType: SHAKE_DIRECTION_ENMU\n  onLoad() {\n    EventManager.Instance.on(EVENTMANAGER.SHAKE_SHOW, this.onshake, this)\n  }\n  onDstroy() {\n    EventManager.Instance.off(EVENTMANAGER.SHAKE_SHOW, this.onshake)\n  }\n  stop() {\n    this.isShaking = false\n  }\n  update() {\n    if (this.isShaking) {\n      //持续时间\n      const duration = 200\n      //振幅\n      const amount = 1.6\n      //频率\n      const frequency = 12\n      //当前时间\n      const crruentTime = (game.totalTime - this.oldTime) / 1000\n      //总时间\n      const totalTime = duration / 1000\n\n      //y=A*sin(w*x+z)\n\n      const offest = amount * Math.sin(frequency * Math.PI * crruentTime)\n      switch (this.shakeType) {\n        case SHAKE_DIRECTION_ENMU.TOP:\n          this.node.setPosition(this.oldPos.x, this.oldPos.y - offest)\n          break\n        case SHAKE_DIRECTION_ENMU.BOTTOM:\n          this.node.setPosition(this.oldPos.x, this.oldPos.y + offest)\n          break\n        case SHAKE_DIRECTION_ENMU.LEFT:\n          this.node.setPosition(this.oldPos.x - offest, this.oldPos.y)\n          break\n        case SHAKE_DIRECTION_ENMU.RIGHT:\n          this.node.setPosition(this.oldPos.x + offest, this.oldPos.y)\n          break\n        default:\n          break\n      }\n\n      if (crruentTime > totalTime) {\n        this.isShaking = false\n        this.node.setPosition(this.oldPos.x, this.oldPos.y)\n      }\n    }\n  }\n  //振动\n  onshake(inputDirection: SHAKE_DIRECTION_ENMU) {\n    if (this.isShaking) {\n      return\n    }\n    this.oldTime = game.totalTime\n    this.oldPos.x = this.node.position.x\n    this.oldPos.y = this.node.position.y\n    this.isShaking = true\n    this.shakeType = inputDirection\n  }\n}\n"]}