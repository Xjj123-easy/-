{"version":3,"sources":["file:///E:/cocosproject/Dome/cocos-start-demo/assets/Scripts/smoke/SmokeMachine.ts"],"names":["_decorator","Animation","ENTINY_STATE_ENUM","PARAMS_NAME_ENUM","GetParamsNUmber","GetParamsTrigger","StateMachine","SmokeIdleStateMachines","SmokeDeathStateMachines","EnityManger","ccclass","SmokeMachine","init","animationComponent","node","addComponent","initParams","initStateMachine","initAnimationEvent","Promise","all","waitingList","on","EventType","FINISHED","name","defaultClip","whiteList","some","v","includes","getComponent","state","DEATH","param","set","IDLE","DRIECTION","stateMachine","run","currentState","get","value"],"mappings":"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","sourcesContent":["import { _decorator, Animation } from 'cc'\nimport { ENTINY_STATE_ENUM, PARAMS_NAME_ENUM } from '../../Enums'\nimport { GetParamsNUmber, GetParamsTrigger, StateMachine } from '../Base/StateMachine'\nimport SmokeIdleStateMachines from './SmokeIdleStateMachines'\nimport SmokeDeathStateMachines from './SmokeDeathStateMachines'\nimport { EnityManger } from '../Base/EnityManger'\n\nconst { ccclass } = _decorator\n@ccclass('SmokeMachine')\nexport class SmokeMachine extends StateMachine {\n  async init() {\n    this.animationComponent = this.node.addComponent(Animation)\n\n    this.initParams()\n\n    this.initStateMachine()\n\n    this.initAnimationEvent()\n\n    await Promise.all(this.waitingList)\n  }\n\n  initAnimationEvent() {\n    this.animationComponent.on(Animation.EventType.FINISHED, () => {\n      const name = this.animationComponent.defaultClip.name //获取动画名字\n      const whiteList = ['idle']\n      if (whiteList.some(v => name.includes(v))) {\n        //匹配是否含有turn再设置状态\n        this.node.getComponent(EnityManger).state = ENTINY_STATE_ENUM.DEATH\n      }\n    })\n  }\n\n  //初始化状态机参数\n  initParams() {\n    this.param.set(PARAMS_NAME_ENUM.IDLE, GetParamsTrigger())\n    this.param.set(PARAMS_NAME_ENUM.DEATH, GetParamsTrigger())\n    this.param.set(PARAMS_NAME_ENUM.DRIECTION, GetParamsNUmber())\n  }\n\n  initStateMachine() {\n    this.stateMachine.set(PARAMS_NAME_ENUM.IDLE, new SmokeIdleStateMachines(this))\n    this.stateMachine.set(PARAMS_NAME_ENUM.DEATH, new SmokeDeathStateMachines(this))\n  }\n  run() {\n    //得到地刺参数\n\n    switch (this.currentState) {\n      case this.stateMachine.get(PARAMS_NAME_ENUM.DEATH):\n      case this.stateMachine.get(PARAMS_NAME_ENUM.IDLE):\n        if (this.param.get(PARAMS_NAME_ENUM.DEATH).value) {\n          this.currentState = this.stateMachine.get(PARAMS_NAME_ENUM.DEATH)\n        } else if (this.param.get(PARAMS_NAME_ENUM.IDLE).value) {\n          this.currentState = this.stateMachine.get(PARAMS_NAME_ENUM.IDLE)\n        } else {\n          this.currentState = this.currentState\n        }\n        break\n      default:\n        this.currentState = this.stateMachine.get(PARAMS_NAME_ENUM.IDLE)\n    }\n  }\n}\n"]}