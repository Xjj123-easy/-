{"version":3,"sources":["file:///E:/cocosproject/Dome/cocos-start-demo/assets/Scripts/spikes/SpikesManager.ts"],"names":["_decorator","Component","Sprite","UITransform","PARAMS_NAME_ENUM","EVENTMANAGER","SPIKES_TYPE_MAP_TOTAL_COUNT_ENUM","ENTINY_STATE_ENUM","randombyLength","EventManager","SpikesMachine","DataManager","ccclass","property","TILE_HEIGHT","TILE_WIDTH","ANIMATION_SPEED","SpikesManager","count","_count","newCount","fsm","setParams","SPIKES_CUR_COUNT","totalcount","_totalcount","SPIKES_TOTAL_COUNT","init","params","sprite","node","addComponent","sizeMode","SizeMode","CUSTOM","transfrom","getComponent","setContentSize","x","y","type","Instance","on","PLAYERMOVE_END","onloop","update","setPosition","onDestroy","off","attack","player","playerX","playerY","emit","ATTACK_PLAYER","DEATH","ResetZero"],"mappings":"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","sourcesContent":["import { _decorator, Component, Sprite, UITransform } from 'cc'\nimport {\n  PARAMS_NAME_ENUM,\n  ENTITY_TYPE_ENUM,\n  EVENTMANAGER,\n  SPIKES_COUNT_MAP_NUMBER_ENUM,\n  SPIKES_TYPE_MAP_TOTAL_COUNT_ENUM,\n  ENTINY_STATE_ENUM,\n} from '../../Enums'\n\nimport { StateMachine } from '../Base/StateMachine'\nimport { ISpikes } from '../../Level'\nimport { randombyLength } from '../Utiils'\nimport EventManager from '../RunTime/EventManager'\nimport { SpikesMachine } from './SpikesMachine'\nimport DataManager from '../RunTime/DataManager'\nconst { ccclass, property } = _decorator\n\nexport const TILE_HEIGHT = 55\nexport const TILE_WIDTH = 55\nexport const ANIMATION_SPEED = 1 / 8\n@ccclass('SpikesManager')\nexport class SpikesManager extends Component {\n  id: string = randombyLength(12)\n  x: number\n  y: number\n  fsm: StateMachine //状态机\n  _count = 0\n  _totalcount: number\n  type: ENTITY_TYPE_ENUM\n  transfrom: UITransform\n  get count() {\n    return this._count\n  }\n\n  set count(newCount: number) {\n    if (this === null) return\n    this._count = newCount\n    this.fsm.setParams(PARAMS_NAME_ENUM.SPIKES_CUR_COUNT, newCount)\n  }\n  get totalcount() {\n    return this._totalcount\n  }\n\n  set totalcount(newCount: number) {\n    if (this === null) return\n    this._totalcount = newCount\n    this.fsm.setParams(PARAMS_NAME_ENUM.SPIKES_TOTAL_COUNT, newCount)\n  }\n  async init(params: ISpikes) {\n    const sprite = this.node.addComponent(Sprite)\n\n    sprite.sizeMode = Sprite.SizeMode.CUSTOM\n\n    this.transfrom = this.getComponent(UITransform)\n\n    this.transfrom.setContentSize(TILE_WIDTH * 4, TILE_HEIGHT * 4)\n\n    this.x = params.x\n\n    this.y = params.y\n\n    this.fsm = this.addComponent(SpikesMachine)\n\n    await this.fsm.init()\n\n    const type = params.type\n\n    this.count = params.count\n\n    this.totalcount =\n      SPIKES_TYPE_MAP_TOTAL_COUNT_ENUM[type as 'SPIKES_ONE' | 'SPIKES_TWO' | 'SPIKES_THREE' | 'SPIKES_FOUR']\n\n    EventManager.Instance.on(EVENTMANAGER.PLAYERMOVE_END, this.onloop, this)\n  }\n  update() {\n    this.node.setPosition(this.x * TILE_WIDTH, -this.y * TILE_HEIGHT)\n  }\n\n  onDestroy() {\n    EventManager.Instance.off(EVENTMANAGER.PLAYERMOVE_END, this.onloop)\n  }\n\n  onloop() {\n    if (this.fsm == null) return\n\n    if (this.count === this.totalcount) {\n      this.count = 0\n    } else {\n      this.count++\n    }\n    this.attack()\n  }\n  attack() {\n    if (DataManager.Instance.player === null) return\n    const { x: playerX, y: playerY } = DataManager.Instance.player\n    if (this.x === playerX && this.y === playerY && this.totalcount === this.count) {\n      EventManager.Instance.emit(EVENTMANAGER.ATTACK_PLAYER, ENTINY_STATE_ENUM.DEATH)\n    }\n  }\n  ResetZero() {\n    this.count = 0\n  }\n}\n"]}