{"version":3,"sources":["file:///E:/cocosproject/Dome/cocos-start-demo/assets/Scripts/Burst/BurstManager.ts"],"names":["UITransform","_decorator","EVENTMANAGER","ENTINY_STATE_ENUM","SHAKE_DIRECTION_ENMU","EnityManger","TILE_HEIGHT","TILE_WIDTH","DataManager","EventManager","BurstMachine","ccclass","property","BurstManager","init","params","fsm","addComponent","transfrom","getComponent","setContentSize","Instance","on","PLAYERMOVE_END","onBurst","onDestroy","off","update","node","setPosition","x","y","player","playerX","playerY","state","IDLE","ATTACK","DEATH","emit","SHAKE_SHOW","BOTTOM","ATTACK_PLAYER","AIRDEATH"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAASA,MAAAA,W,OAAAA,W;AAAaC,MAAAA,U,OAAAA,U;;AACbC,MAAAA,Y,iBAAAA,Y;AAAcC,MAAAA,iB,iBAAAA,iB;AAAmBC,MAAAA,oB,iBAAAA,oB;;AAEjCC,MAAAA,W,iBAAAA,W;AAAaC,MAAAA,W,iBAAAA,W;AAAaC,MAAAA,U,iBAAAA,U;;AAC5BC,MAAAA,W;;AACAC,MAAAA,Y;;AACEC,MAAAA,Y,iBAAAA,Y;;;;;;;OAEH;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBX,U;;8BAEjBY,Y,WADZF,OAAO,CAAC,cAAD,C,gBAAR,MACaE,YADb;AAAA;AAAA,sCAC8C;AAClC,cAAJC,IAAI,CAACC,MAAD,EAAkB;AAC1B,eAAKC,GAAL,GAAW,KAAKC,YAAL;AAAA;AAAA,2CAAX;AAEA,gBAAM,KAAKD,GAAL,CAASF,IAAT,EAAN;AAEA,gBAAMA,IAAN,CAAWC,MAAX;AACA,eAAKG,SAAL,GAAiB,KAAKC,YAAL,CAAkBnB,WAAlB,CAAjB;AACA,eAAKkB,SAAL,CAAeE,cAAf;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA,4CAAaC,QAAb,CAAsBC,EAAtB,CAAyB;AAAA;AAAA,4CAAaC,cAAtC,EAAsD,KAAKC,OAA3D,EAAoE,IAApE;AACD;;AACDC,QAAAA,SAAS,GAAG;AACV,gBAAMA,SAAN;AACA;AAAA;AAAA,4CAAaJ,QAAb,CAAsBK,GAAtB,CAA0B;AAAA;AAAA,4CAAaH,cAAvC,EAAuD,KAAKC,OAA5D;AACD;;AAEDG,QAAAA,MAAM,GAAG;AACP,eAAKC,IAAL,CAAUC,WAAV,CAAsB,KAAKC,CAAL;AAAA;AAAA,uCAAtB,EAA2C,CAAC,KAAKC,CAAN;AAAA;AAAA,yCAA3C;AACD;AACD;AACF;AACA;AACA;AACA;AACA;;;AAEEP,QAAAA,OAAO,GAAG;AACR,cAAI;AAAA;AAAA,0CAAYH,QAAZ,CAAqBW,MAArB,KAAgC,IAApC,EAA0C;AAC1C,gBAAM;AAAEF,YAAAA,CAAC,EAAEG,OAAL;AAAcF,YAAAA,CAAC,EAAEG;AAAjB,cAA6B;AAAA;AAAA,0CAAYb,QAAZ,CAAqBW,MAAxD;;AAEA,cAAI,KAAKF,CAAL,KAAWG,OAAX,IAAsB,KAAKF,CAAL,KAAWG,OAAjC,IAA4C,KAAKC,KAAL,KAAe;AAAA;AAAA,sDAAkBC,IAAjF,EAAuF;AACrF,iBAAKD,KAAL,GAAa;AAAA;AAAA,wDAAkBE,MAA/B;AACD,WAFD,MAEO,IAAI,KAAKF,KAAL,KAAe;AAAA;AAAA,sDAAkBE,MAArC,EAA6C;AAClD,iBAAKF,KAAL,GAAa;AAAA;AAAA,wDAAkBG,KAA/B;AACA;AAAA;AAAA,8CAAajB,QAAb,CAAsBkB,IAAtB,CAA2B;AAAA;AAAA,8CAAaC,UAAxC,EAAoD;AAAA;AAAA,8DAAqBC,MAAzE;;AACA,gBAAI,KAAKX,CAAL,KAAWG,OAAX,IAAsB,KAAKF,CAAL,KAAWG,OAArC,EAA8C;AAC5C;AAAA;AAAA,gDAAab,QAAb,CAAsBkB,IAAtB,CAA2B;AAAA;AAAA,gDAAaG,aAAxC,EAAuD;AAAA;AAAA,0DAAkBC,QAAzE;AACD;AACF;AACF;;AAvC2C,O","sourcesContent":["import { UITransform, _decorator } from 'cc'\nimport { EVENTMANAGER, ENTINY_STATE_ENUM, SHAKE_DIRECTION_ENMU } from '../../Enums'\nimport { IEntity } from '../../Level'\nimport { EnityManger, TILE_HEIGHT, TILE_WIDTH } from '../Base/EnityManger'\nimport DataManager from '../RunTime/DataManager'\nimport EventManager from '../RunTime/EventManager'\nimport { BurstMachine } from './BurstMachine'\n\nconst { ccclass, property } = _decorator\n@ccclass('BurstManager')\nexport class BurstManager extends EnityManger {\n  async init(params: IEntity) {\n    this.fsm = this.addComponent(BurstMachine)\n\n    await this.fsm.init()\n\n    super.init(params)\n    this.transfrom = this.getComponent(UITransform)\n    this.transfrom.setContentSize(TILE_WIDTH, TILE_HEIGHT)\n    EventManager.Instance.on(EVENTMANAGER.PLAYERMOVE_END, this.onBurst, this)\n  }\n  onDestroy() {\n    super.onDestroy()\n    EventManager.Instance.off(EVENTMANAGER.PLAYERMOVE_END, this.onBurst)\n  }\n\n  update() {\n    this.node.setPosition(this.x * TILE_WIDTH, -this.y * TILE_HEIGHT)\n  }\n  /**\n   * isInit 判断初始化\n   * changeDirection 改变敌人放向\n   * 通过对比敌人坐标跟player坐标在哪个象限\n   * dix diy 表示偏远量 靠近x轴 还是靠近y轴\n   */\n\n  onBurst() {\n    if (DataManager.Instance.player === null) return\n    const { x: playerX, y: playerY } = DataManager.Instance.player\n\n    if (this.x === playerX && this.y === playerY && this.state === ENTINY_STATE_ENUM.IDLE) {\n      this.state = ENTINY_STATE_ENUM.ATTACK\n    } else if (this.state === ENTINY_STATE_ENUM.ATTACK) {\n      this.state = ENTINY_STATE_ENUM.DEATH\n      EventManager.Instance.emit(EVENTMANAGER.SHAKE_SHOW, SHAKE_DIRECTION_ENMU.BOTTOM)\n      if (this.x === playerX && this.y === playerY) {\n        EventManager.Instance.emit(EVENTMANAGER.ATTACK_PLAYER, ENTINY_STATE_ENUM.AIRDEATH)\n      }\n    }\n  }\n}\n"]}