{"version":3,"sources":["file:///E:/cocosproject/Dome/cocos-start-demo/assets/Scripts/Player/PlayerStateMachine.ts"],"names":["_decorator","Animation","ENTINY_STATE_ENUM","PARAMS_NAME_ENUM","EnityManger","StateMachine","GetParamsTrigger","GetParamsNUmber","AirDeathSubStateMachine","AttackDeathSubStateMachine","AttackSubStateMachine","BlockblackStateMachine","BlockfrontStateMachine","BlockturnleftStateMachine","BlockturnrightStateMachine","IdleLeftStateMachine","TurnLeftStateMachine","TurnRightStateMachine","ccclass","property","PlayerStateMachine","init","animationComponent","addComponent","initParams","initStateMachine","initEventMachine","Promise","all","waitingList","on","EventType","FINISHED","name","defaultClip","whiteList","some","v","includes","node","getComponent","state","IDLE","param","set","TURN_LEFT","TURN_RIGHT","DRIECTION","BLOCKFRONT","BLOCKTURNLEFT","BLOCKBACK","BLOCKLEFT","BLOCKRIGHT","DEATH","ATTACK","AIRDEATH","BLOCKTURNRIGHT","stateMachine","run","currentState","get","value"],"mappings":"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","sourcesContent":["import { _decorator, Component, Node, AnimationClip, Animation, SpriteFrame } from 'cc'\nimport { DIRECTION_ORDER_ENUM, ENTINY_STATE_ENUM, FMS_PARAMS_ENUM, PARAMS_NAME_ENUM } from '../../Enums'\nimport { EnityManger } from '../Base/EnityManger'\nimport { State } from '../Base/State'\nimport { StateMachine, GetParamsTrigger, GetParamsNUmber } from '../Base/StateMachine'\nimport AirDeathSubStateMachine from './AirDeathSubStateMachine'\nimport AttackDeathSubStateMachine from './AttackDeathSubStateMachine'\nimport AttackSubStateMachine from './AttackSubStateMachine'\nimport BlockblackStateMachine from './BlockblackStateMachine'\nimport BlockfrontStateMachine from './BlockfrontStateMachine'\nimport BlockturnleftStateMachine from './BlockturnleftStateMachine'\nimport BlockturnrightStateMachine from './BlockturnrightStateMachine'\nimport IdleLeftStateMachine from './IdleLeftStateMachine'\nimport TurnLeftStateMachine from './TurnLeftStateMachine'\nimport TurnRightStateMachine from './TurnRightStateMachine'\n\nconst { ccclass, property } = _decorator\n\n@ccclass('PlayerStateMachine')\nexport class PlayerStateMachine extends StateMachine {\n  async init() {\n    this.animationComponent = this.addComponent(Animation)\n\n    this.initParams()\n\n    this.initStateMachine()\n\n    this.initEventMachine()\n\n    await Promise.all(this.waitingList)\n  }\n\n  initEventMachine() {\n    this.animationComponent.on(Animation.EventType.FINISHED, () => {\n      const name = this.animationComponent.defaultClip.name //获取动画名字\n\n      const whiteList = ['block', 'turn', 'attack']\n      if (whiteList.some(v => name.includes(v))) {\n        //匹配是否含有turn再设置状态\n        this.node.getComponent(EnityManger).state = ENTINY_STATE_ENUM.IDLE\n        // this.setParams(PARAMS_NAME_ENUM.IDLE, true)\n      }\n    })\n  }\n\n  //初始化状态机参数\n  initParams() {\n    this.param.set(PARAMS_NAME_ENUM.IDLE, GetParamsTrigger())\n    this.param.set(PARAMS_NAME_ENUM.TURN_LEFT, GetParamsTrigger())\n    this.param.set(PARAMS_NAME_ENUM.TURN_RIGHT, GetParamsTrigger())\n    this.param.set(PARAMS_NAME_ENUM.DRIECTION, GetParamsNUmber())\n    this.param.set(PARAMS_NAME_ENUM.BLOCKFRONT, GetParamsTrigger())\n    this.param.set(PARAMS_NAME_ENUM.BLOCKTURNLEFT, GetParamsTrigger())\n    this.param.set(PARAMS_NAME_ENUM.BLOCKBACK, GetParamsTrigger())\n    this.param.set(PARAMS_NAME_ENUM.BLOCKLEFT, GetParamsTrigger())\n    this.param.set(PARAMS_NAME_ENUM.BLOCKRIGHT, GetParamsTrigger())\n    this.param.set(PARAMS_NAME_ENUM.BLOCKTURNLEFT, GetParamsTrigger())\n    this.param.set(PARAMS_NAME_ENUM.DEATH, GetParamsTrigger())\n    this.param.set(PARAMS_NAME_ENUM.ATTACK, GetParamsTrigger())\n    this.param.set(PARAMS_NAME_ENUM.AIRDEATH, GetParamsTrigger())\n    this.param.set(PARAMS_NAME_ENUM.BLOCKTURNRIGHT, GetParamsTrigger())\n  }\n\n  initStateMachine() {\n    this.stateMachine.set(PARAMS_NAME_ENUM.IDLE, new IdleLeftStateMachine(this))\n    this.stateMachine.set(PARAMS_NAME_ENUM.TURN_LEFT, new TurnLeftStateMachine(this))\n    this.stateMachine.set(PARAMS_NAME_ENUM.TURN_RIGHT, new TurnRightStateMachine(this))\n    this.stateMachine.set(PARAMS_NAME_ENUM.BLOCKFRONT, new BlockfrontStateMachine(this))\n    this.stateMachine.set(PARAMS_NAME_ENUM.BLOCKBACK, new BlockblackStateMachine(this))\n    this.stateMachine.set(PARAMS_NAME_ENUM.BLOCKTURNLEFT, new BlockturnleftStateMachine(this))\n    this.stateMachine.set(PARAMS_NAME_ENUM.DEATH, new AttackDeathSubStateMachine(this))\n    this.stateMachine.set(PARAMS_NAME_ENUM.AIRDEATH, new AirDeathSubStateMachine(this))\n    this.stateMachine.set(PARAMS_NAME_ENUM.BLOCKTURNRIGHT, new BlockturnrightStateMachine(this))\n    this.stateMachine.set(PARAMS_NAME_ENUM.ATTACK, new AttackSubStateMachine(this))\n  }\n  run() {\n    switch (this.currentState) {\n      case this.stateMachine.get(PARAMS_NAME_ENUM.TURN_LEFT):\n      case this.stateMachine.get(PARAMS_NAME_ENUM.DEATH):\n      case this.stateMachine.get(PARAMS_NAME_ENUM.ATTACK):\n      case this.stateMachine.get(PARAMS_NAME_ENUM.AIRDEATH):\n      case this.stateMachine.get(PARAMS_NAME_ENUM.TURN_RIGHT):\n      case this.stateMachine.get(PARAMS_NAME_ENUM.BLOCKFRONT):\n      case this.stateMachine.get(PARAMS_NAME_ENUM.BLOCKBACK):\n      case this.stateMachine.get(PARAMS_NAME_ENUM.BLOCKTURNLEFT):\n      case this.stateMachine.get(PARAMS_NAME_ENUM.IDLE):\n        if (this.param.get(PARAMS_NAME_ENUM.TURN_LEFT).value) {\n          this.currentState = this.stateMachine.get(PARAMS_NAME_ENUM.TURN_LEFT)\n        } else if (this.param.get(PARAMS_NAME_ENUM.TURN_RIGHT).value) {\n          this.currentState = this.stateMachine.get(PARAMS_NAME_ENUM.TURN_RIGHT)\n        } else if (this.param.get(PARAMS_NAME_ENUM.BLOCKTURNLEFT).value) {\n          this.currentState = this.stateMachine.get(PARAMS_NAME_ENUM.BLOCKTURNLEFT)\n        } else if (this.param.get(PARAMS_NAME_ENUM.BLOCKTURNRIGHT).value) {\n          this.currentState = this.stateMachine.get(PARAMS_NAME_ENUM.BLOCKTURNRIGHT)\n        } else if (this.param.get(PARAMS_NAME_ENUM.DEATH).value) {\n          this.currentState = this.stateMachine.get(PARAMS_NAME_ENUM.DEATH)\n        } else if (this.param.get(PARAMS_NAME_ENUM.AIRDEATH).value) {\n          this.currentState = this.stateMachine.get(PARAMS_NAME_ENUM.AIRDEATH)\n        } else if (this.param.get(PARAMS_NAME_ENUM.BLOCKFRONT).value) {\n          this.currentState = this.stateMachine.get(PARAMS_NAME_ENUM.BLOCKFRONT)\n        } else if (this.param.get(PARAMS_NAME_ENUM.BLOCKBACK).value) {\n          this.currentState = this.stateMachine.get(PARAMS_NAME_ENUM.BLOCKBACK)\n        } else if (this.param.get(PARAMS_NAME_ENUM.IDLE).value) {\n          this.currentState = this.stateMachine.get(PARAMS_NAME_ENUM.IDLE)\n        } else if (this.param.get(PARAMS_NAME_ENUM.ATTACK).value) {\n          this.currentState = this.stateMachine.get(PARAMS_NAME_ENUM.ATTACK)\n        } else {\n          this.currentState = this.currentState\n        }\n        break\n      default:\n        this.currentState = this.stateMachine.get(PARAMS_NAME_ENUM.IDLE)\n    }\n  }\n}\n"]}