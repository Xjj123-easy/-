{"version":3,"sources":["file:///E:/cocosproject/Dome/cocos-start-demo/assets/Scripts/Base/State.ts"],"names":["State","AnimationClip","animation","Sprite","ANIMATION_SPEED","ResourcesManager","sortspriteFrame","constructor","fsm","path","warpMode","WrapMode","Normal","speed","events","init","promise","Instance","loaddir","waitingList","push","animationClip","name","spriteFrame","track","ObjectTrack","TrackPath","toComponent","toProperty","frames","map","item","index","channel","curve","assignSorted","addTrack","duration","length","wrapMode","event","updateEventDatas","run","animationComponent","defaultClip","play"],"mappings":";;;oHAMaA,K;;;;;;;;;;;;;;;;;;;;;;;;;;;AANJC,MAAAA,a,OAAAA,a;AAA4BC,MAAAA,S,OAAAA,S;AAAwBC,MAAAA,M,OAAAA,M;;AAEpDC,MAAAA,e,iBAAAA,e;;AACFC,MAAAA,gB;;AAEEC,MAAAA,e,iBAAAA,e;;;;;;;uBACIN,K,GAAN,MAAMA,KAAN,CAAY;AAEjBO,QAAAA,WAAW,CACDC,GADC,EAEDC,IAFC,EAGDC,QAAgC,GAAGT,aAAa,CAACU,QAAd,CAAuBC,MAHzD,EAIDC,KAAa;AAAA;AAAA,8CAJZ,EAKDC,MAAa,GAAG,EALf,EAMT;AAAA;;AAAA,eALQN,GAKR,GALQA,GAKR;AAAA,eAJQC,IAIR,GAJQA,IAIR;AAAA,eAHQC,QAGR,GAHQA,QAGR;AAAA,eAFQG,KAER,GAFQA,KAER;AAAA,eADQC,MACR,GADQA,MACR;AACA,eAAKC,IAAL;AACD;;AAES,cAAJA,IAAI,GAAG;AACX,gBAAMC,OAAO,GAAG;AAAA;AAAA,oDAAiBC,QAAjB,CAA0BC,OAA1B,CAAkC,KAAKT,IAAvC,CAAhB;AAEA,eAAKD,GAAL,CAASW,WAAT,CAAqBC,IAArB,CAA0BJ,OAA1B;AAEA,eAAKK,aAAL,GAAqB,IAAIpB,aAAJ,EAArB;AAEA,eAAKoB,aAAL,CAAmBC,IAAnB,GAA0B,KAAKb,IAA/B;AAEA,gBAAMc,WAAW,GAAG,MAAMP,OAA1B;AAEA,gBAAMQ,KAAK,GAAG,IAAItB,SAAS,CAACuB,WAAd,EAAd,CAXW,CAW+B;;AAC1CD,UAAAA,KAAK,CAACf,IAAN,GAAa,IAAIP,SAAS,CAACwB,SAAd,GAA0BC,WAA1B,CAAsCxB,MAAtC,EAA8CyB,UAA9C,CAAyD,aAAzD,CAAb,CAZW,CAY0E;;AACrF,gBAAMC,MAAoC,GAAG;AAAA;AAAA,kDAAgBN,WAAhB,EAA6BO,GAA7B,CAAiC,CAACC,IAAD,EAAOC,KAAP,KAAiB,CAC7F,KAAKnB,KAAL,GAAamB,KADgF,EAE7FD,IAF6F,CAAlD,CAA7C;AAIAP,UAAAA,KAAK,CAACS,OAAN,CAAcC,KAAd,CAAoBC,YAApB,CAAiCN,MAAjC,EAjBW,CAmBX;;AACA,eAAKR,aAAL,CAAmBe,QAAnB,CAA4BZ,KAA5B;AAEA,eAAKH,aAAL,CAAmBgB,QAAnB,GAA8Bd,WAAW,CAACe,MAAZ;AAAA;AAAA,iDAA9B,CAtBW,CAsBwD;;AACnE,eAAKjB,aAAL,CAAmBkB,QAAnB,GAA8B,KAAK7B,QAAnC;;AAEA,eAAK,MAAM8B,KAAX,IAAoB,KAAK1B,MAAzB,EAAiC;AAC/B,iBAAKO,aAAL,CAAmBP,MAAnB,CAA0BM,IAA1B,CAA+BoB,KAA/B;AACD;;AACD,eAAKnB,aAAL,CAAmBoB,gBAAnB;AACD;;AACDC,QAAAA,GAAG,GAAG;AAAA;;AACJ,cAAI,mBAAKlC,GAAL,iFAAUmC,kBAAV,gFAA8BC,WAA9B,MAA8C,KAAKvB,aAAvD,EAAsE;AACpE;AACD;;AACD,eAAKb,GAAL,CAASmC,kBAAT,CAA4BC,WAA5B,GAA0C,KAAKvB,aAA/C;AACA,eAAKb,GAAL,CAASmC,kBAAT,CAA4BE,IAA5B;AACD;;AAhDgB,O","sourcesContent":["import { AnimationClip, UITransform, animation, SpriteFrame, Sprite } from 'cc'\n\nimport { ANIMATION_SPEED } from '../Player/PlayerManager'\nimport ResourcesManager from '../RunTime/ResourcesManager'\nimport { StateMachine } from './StateMachine'\nimport { sortspriteFrame } from '../Utiils'\nexport class State {\n  private animationClip: AnimationClip\n  constructor(\n    private fsm: StateMachine,\n    private path: string,\n    private warpMode: AnimationClip.WrapMode = AnimationClip.WrapMode.Normal,\n    private speed: number = ANIMATION_SPEED,\n    private events: any[] = [],\n  ) {\n    this.init()\n  }\n\n  async init() {\n    const promise = ResourcesManager.Instance.loaddir(this.path)\n\n    this.fsm.waitingList.push(promise)\n\n    this.animationClip = new AnimationClip()\n\n    this.animationClip.name = this.path\n\n    const spriteFrame = await promise\n\n    const track = new animation.ObjectTrack() // 创建一个对象轨道\n    track.path = new animation.TrackPath().toComponent(Sprite).toProperty('spriteFrame') // 指定轨道路径，即指定目标对象为 \"Foo\" 子节点的 \"position\" 属性\n    const frames: Array<[number, SpriteFrame]> = sortspriteFrame(spriteFrame).map((item, index) => [\n      this.speed * index,\n      item,\n    ])\n    track.channel.curve.assignSorted(frames)\n\n    // 最后将轨道添加到动画剪辑以应用\n    this.animationClip.addTrack(track)\n\n    this.animationClip.duration = spriteFrame.length * ANIMATION_SPEED // 整个动画剪辑的周期\n    this.animationClip.wrapMode = this.warpMode\n\n    for (const event of this.events) {\n      this.animationClip.events.push(event)\n    }\n    this.animationClip.updateEventDatas()\n  }\n  run() {\n    if (this.fsm?.animationComponent?.defaultClip === this.animationClip) {\n      return\n    }\n    this.fsm.animationComponent.defaultClip = this.animationClip\n    this.fsm.animationComponent.play()\n  }\n}\n"]}