{"version":3,"sources":["file:///E:/cocosproject/Dome/cocos-start-demo/assets/Scripts/spikes/SpikesMachine.ts"],"names":["_decorator","Animation","ENTITY_TYPE_ENUM","PARAMS_NAME_ENUM","SPIKES_TYPE_MAP_TOTAL_COUNT_ENUM","GetParamsNUmber","StateMachine","SpikesFourSubMachine","SpikesManager","SpikesOneSubMachine","SpikesThreeSubMachine","SpikesTwoSubMachine","ccclass","property","SpikesMachine","init","animationComponent","node","addComponent","initParams","initStateMachine","initAnimationEvent","Promise","all","waitingList","on","EventType","FINISHED","name","defaultClip","value","param","get","SPIKES_TOTAL_COUNT","includes","SPIKES_ONE","SPIKES_TWO","SPIKES_THREE","SPIKES_FOUR","getComponent","ResetZero","set","SPIKES_CUR_COUNT","stateMachine","run","currentState"],"mappings":"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","sourcesContent":["import { _decorator, Animation } from 'cc'\nimport { ENTINY_STATE_ENUM, ENTITY_TYPE_ENUM, PARAMS_NAME_ENUM, SPIKES_TYPE_MAP_TOTAL_COUNT_ENUM } from '../../Enums'\nimport { State } from '../Base/State'\nimport { GetParamsNUmber, GetParamsTrigger, StateMachine } from '../Base/StateMachine'\nimport SpikesFourSubMachine from './SpikesFourSubMachine'\nimport { SpikesManager } from './SpikesManager'\nimport SpikesOneSubMachine from './SpikesOneSubMachine'\nimport SpikesThreeSubMachine from './SpikesThreeSubMachine'\nimport SpikesTwoSubMachine from './SpikesTwoSubMachine'\n\nconst { ccclass, property } = _decorator\n@ccclass('SpikesMachine')\nexport class SpikesMachine extends StateMachine {\n  async init() {\n    this.animationComponent = this.node.addComponent(Animation)\n\n    this.initParams()\n\n    this.initStateMachine()\n\n    this.initAnimationEvent()\n\n    await Promise.all(this.waitingList)\n  }\n\n  initAnimationEvent() {\n    this.animationComponent.on(Animation.EventType.FINISHED, () => {\n      const name = this.animationComponent.defaultClip.name\n\n      const { value } = this.param.get(PARAMS_NAME_ENUM.SPIKES_TOTAL_COUNT)\n\n      // 例如1个刺的地裂，在播放完1刺之后，回到0的状态\n      if (\n        (name.includes('spikesone/two') && value === SPIKES_TYPE_MAP_TOTAL_COUNT_ENUM.SPIKES_ONE) ||\n        (name.includes('spikesone/three') && value === SPIKES_TYPE_MAP_TOTAL_COUNT_ENUM.SPIKES_TWO) ||\n        (name.includes('spikesone/four') && value === SPIKES_TYPE_MAP_TOTAL_COUNT_ENUM.SPIKES_THREE) ||\n        (name.includes('spikesone/five') && value === SPIKES_TYPE_MAP_TOTAL_COUNT_ENUM.SPIKES_FOUR)\n      ) {\n        this.node.getComponent(SpikesManager).ResetZero()\n      }\n    })\n  }\n\n  //初始化状态机参数\n  initParams() {\n    this.param.set(PARAMS_NAME_ENUM.SPIKES_CUR_COUNT, GetParamsNUmber())\n    this.param.set(PARAMS_NAME_ENUM.SPIKES_TOTAL_COUNT, GetParamsNUmber())\n  }\n\n  initStateMachine() {\n    this.stateMachine.set(ENTITY_TYPE_ENUM.SPIKES_ONE, new SpikesOneSubMachine(this))\n    this.stateMachine.set(ENTITY_TYPE_ENUM.SPIKES_TWO, new SpikesTwoSubMachine(this))\n    this.stateMachine.set(ENTITY_TYPE_ENUM.SPIKES_THREE, new SpikesThreeSubMachine(this))\n    this.stateMachine.set(ENTITY_TYPE_ENUM.SPIKES_FOUR, new SpikesFourSubMachine(this))\n  }\n  run() {\n    //得到地刺参数\n    const { value } = this.param.get(PARAMS_NAME_ENUM.SPIKES_TOTAL_COUNT)\n    switch (this.currentState) {\n      case this.stateMachine.get(ENTITY_TYPE_ENUM.SPIKES_ONE):\n      case this.stateMachine.get(ENTITY_TYPE_ENUM.SPIKES_TWO):\n      case this.stateMachine.get(ENTITY_TYPE_ENUM.SPIKES_THREE):\n      case this.stateMachine.get(ENTITY_TYPE_ENUM.SPIKES_FOUR):\n        if (value === SPIKES_TYPE_MAP_TOTAL_COUNT_ENUM.SPIKES_ONE) {\n          this.currentState = this.stateMachine.get(ENTITY_TYPE_ENUM.SPIKES_ONE)\n        } else if (value === SPIKES_TYPE_MAP_TOTAL_COUNT_ENUM.SPIKES_TWO) {\n          this.currentState = this.stateMachine.get(ENTITY_TYPE_ENUM.SPIKES_TWO)\n        } else if (value === SPIKES_TYPE_MAP_TOTAL_COUNT_ENUM.SPIKES_THREE) {\n          this.currentState = this.stateMachine.get(ENTITY_TYPE_ENUM.SPIKES_THREE)\n        } else if (value === SPIKES_TYPE_MAP_TOTAL_COUNT_ENUM.SPIKES_FOUR) {\n          this.currentState = this.stateMachine.get(ENTITY_TYPE_ENUM.SPIKES_FOUR)\n        } else {\n          this.currentState = this.currentState\n        }\n        break\n      default:\n        this.currentState = this.stateMachine.get(ENTITY_TYPE_ENUM.SPIKES_ONE)\n    }\n  }\n}\n"]}